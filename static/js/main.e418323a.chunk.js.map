{"version":3,"sources":["components/Loading.module.scss","pages/home/components/MonthPicker.module.scss","components/Button.module.scss","pages/add-transaction/AddTransaction.module.scss","pages/add-category/AddCategory.module.scss","pages/home/Home.module.scss","pages/add-transaction/components/CategoryList.module.scss","services/common.js","services/charts.js","pages/home/components/MonthPicker.js","pages/home/components/Chart.js","pages/home/components/Summary.js","images/cash.svg","services/transactions.js","pages/home/components/TransactionList.js","components/Loading.js","pages/home/Home.js","pages/add-transaction/components/CategoryList.js","components/Button.js","locales/traduction.jsx","pages/add-transaction/AddTransaction.js","services/categories.js","data/category-images.js","pages/add-category/components/ImageList.js","pages/add-category/AddCategory.js","App.js","reportWebVitals.js","index.js","pages/home/components/TransactionList.module.scss","pages/home/components/Summary.module.scss","pages/add-category/components/ImageList.module.scss"],"names":["module","exports","getBaseUrl","getExpenses","from","to","url","URL","search","URLSearchParams","toString","fetch","then","res","json","MonthPicker","initValue","maxValue","onSelect","monthName","useState","selectedMonth","setSelectedMonth","moment","locale","pickMonthRef","React","createRef","ref","value","onChange","year","month","current","dismiss","years","max","lang","className","styles","monthPicker","onClick","show","Chart","data","element","name","income","expenses","balance","COLORS","RADIAN","Math","PI","ResponsiveContainer","width","height","PieChart","Pie","dataKey","nameKey","label","cx","cy","midAngle","innerRadius","outerRadius","index","radius","x","cos","y","sin","formattedValue","Dinero","amount","Object","keys","currency","setLocale","toFormat","textAnchor","dominantBaseline","labelLine","map","entry","Cell","fill","length","Summary","transactions","selectedYearAndMonth","dataChart","transaction","type","chartData","wrapper","boxIncome","boxExpense","boxBalance","getTransactions","TransactionList","transactionsByDate","date","push","idx","box","format","category","image","price","rowBox","Loading","loading","role","title","Home","now","Number","setLoading","setChartData","setTransactions","setSelectedYearAndMonth","fetchExpenses","a","endOf","expense","id","total","fetchTransactions","console","log","useEffect","fetchTransactionsPromise","fetchExpensesPromise","Promise","all","catch","err","header","src","imgHeader","alt","main","transactionSumary","dataEmpty","bottomMenu","newIncome","newExpense","CategoryList","categories","onSelectCategory","selectedCategory","container","categorySelected","imgCategoryBox","addCategory","newCategory","Button","btn","traductionType","AddTransaction","history","useHistory","useParams","selectedDate","setSelectedDate","setAmount","setSelectedCategory","setCategories","response","filteredCategories","filter","headerTransaction","leftHome","formContainer","onSubmit","ev","preventDefault","selectTransaction","body","categoryId","method","JSON","stringify","headers","createTransaction","error","alert","nota","formContent","required","event","target","labelAmount","min","step","placeholder","buttonContainer","buttonCancel","categoryImages","ImageList","onSelectImage","selectedImage","img","AddCategory","setLabel","setSelectedImage","categoryLink","createCategory","fielset","labelInput","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e418323a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"Loading_loading__1bd-E\",\"title\":\"Loading_title__1BxWR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"monthPicker\":\"MonthPicker_monthPicker__1OUBS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__2sf7z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerTransaction\":\"AddTransaction_headerTransaction__3QJ8c\",\"leftHome\":\"AddTransaction_leftHome__3shMw\",\"title\":\"AddTransaction_title__2AX45\",\"formContainer\":\"AddTransaction_formContainer__2JvFb\",\"buttonContainer\":\"AddTransaction_buttonContainer__Gcyt8\",\"date\":\"AddTransaction_date__2HMxw\",\"nota\":\"AddTransaction_nota__1N1Ip\",\"formContent\":\"AddTransaction_formContent__2uFjP\",\"amount\":\"AddTransaction_amount__uAzbC\",\"labelAmount\":\"AddTransaction_labelAmount__2CuBm\",\"buttonCancel\":\"AddTransaction_buttonCancel__30_Xm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AddCategory_container__3QU6t\",\"header\":\"AddCategory_header__2O-Ta\",\"categoryLink\":\"AddCategory_categoryLink__1Zmtk\",\"title\":\"AddCategory_title__tX9JQ\",\"wrapper\":\"AddCategory_wrapper__2zSgN\",\"fielset\":\"AddCategory_fielset__1PJcu\",\"labelInput\":\"AddCategory_labelInput__3rZR9\",\"label\":\"AddCategory_label__18XUB\",\"image\":\"AddCategory_image__2a_uQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Home_header__35rkk\",\"imgHeader\":\"Home_imgHeader__38f7r\",\"bottomMenu\":\"Home_bottomMenu__1167K\",\"newIncome\":\"Home_newIncome__2kvgc\",\"newExpense\":\"Home_newExpense__1-sYy\",\"main\":\"Home_main__1oLAT\",\"transactionSumary\":\"Home_transactionSumary__28SQv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CategoryList_container__2NRxL\",\"category\":\"CategoryList_category__221LJ\",\"imgCategoryBox\":\"CategoryList_imgCategoryBox__ABg7l\",\"categorySelected\":\"CategoryList_categorySelected__2Y5ut\",\"addCategory\":\"CategoryList_addCategory__3lajL\",\"newCategory\":\"CategoryList_newCategory__34-lI\"};","const getBaseUrl = () => {\r\n  const prodUrl = \"https://infinty-cashdb-production.up.railway.app/api/v1\";\r\n  const localUrl = \"http://localhost:8000/api/v1\";\r\n  const baseUrl = process.env.NODE_ENV === \"production\" ? prodUrl : localUrl;\r\n  return baseUrl;\r\n};\r\n\r\nexport default getBaseUrl;\r\n","import getBaseUrl from \"./common\";\r\n\r\nexport function getExpenses({ from, to }) {\r\n  const url = new URL(`${getBaseUrl()}/chart/expenses`);\r\n  url.search = new URLSearchParams({ from, to }).toString();\r\n\r\n  return fetch(url).then((res) => res.json());\r\n}\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./MonthPicker.module.scss\";\r\n\r\nimport Picker from \"react-month-picker\";\r\nimport \"react-month-picker/css/month-picker.css\";\r\nimport moment from \"moment\";\r\n\r\nfunction MonthPicker({ initValue, maxValue, onSelect, monthName }) {\r\n  const [selectedMonth, setSelectedMonth] = useState(initValue);\r\n  moment.locale(\"es\");\r\n  const handleMonthChange = (year, month) => {\r\n    setSelectedMonth({ year, month });\r\n    onSelect(`${year}-${month}`);\r\n    pickMonthRef.current.dismiss();\r\n  };\r\n\r\n  const pickerLang = {\r\n    months: [\r\n      \"Ene\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Abr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Ago\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dic\",\r\n    ],\r\n    from: \"From\",\r\n    to: \"To\",\r\n  };\r\n\r\n  const pickMonthRef = React.createRef();\r\n\r\n  return (\r\n    <Picker\r\n      ref={pickMonthRef}\r\n      value={selectedMonth}\r\n      onChange={handleMonthChange}\r\n      years={{ max: maxValue }}\r\n      lang={pickerLang.months}\r\n    >\r\n      <div\r\n        className={styles.monthPicker}\r\n        onClick={() => pickMonthRef.current.show(selectedMonth)}\r\n      >\r\n        {monthName}\r\n      </div>\r\n    </Picker>\r\n  );\r\n}\r\n\r\nexport default MonthPicker;\r\n","import { Cell, Pie, PieChart, ResponsiveContainer } from \"recharts\";\r\nimport Dinero from \"dinero.js\";\r\n\r\nexport default function Chart({ data }) {\r\n  const element = [\r\n    { name: \"Ingresos\", value: data.income },\r\n    { name: \"Gastos\", value: data.expenses },\r\n    { name: \"Total\", value: data.balance },\r\n  ];\r\n\r\n  const COLORS = [\"#218814\", \"#dc3545\", \"#b4b9b2de\"];\r\n\r\n  const RADIAN = Math.PI / 180;\r\n  const renderCustomizedLabel = ({\r\n    cx,\r\n    cy,\r\n    midAngle,\r\n    innerRadius,\r\n    outerRadius,\r\n    index,\r\n  }) => {\r\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.3;\r\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n    const formattedValue = Dinero({\r\n      amount: data[Object.keys(data)[index]],\r\n      currency: \"EUR\",\r\n    })\r\n      .setLocale(\"es-ES\")\r\n      .toFormat();\r\n\r\n    return (\r\n      <text\r\n        x={x}\r\n        y={y}\r\n        textAnchor={x > cx ? \"start\" : \"end\"}\r\n        dominantBaseline=\"central\"\r\n      >\r\n        {`${formattedValue} `}\r\n      </text>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ResponsiveContainer width=\"100%\" height=\"30%\">\r\n        <PieChart width={400} height={400}>\r\n          <Pie\r\n            data={element}\r\n            dataKey=\"value\"\r\n            nameKey=\"name\"\r\n            label={renderCustomizedLabel}\r\n            outerRadius={80}\r\n            innerRadius={50}\r\n            labelLine={false}\r\n          >\r\n            {element.map((entry, index) => (\r\n              <Cell\r\n                key={`cell-${index}`}\r\n                fill={COLORS[index % COLORS.length]}\r\n              />\r\n            ))}\r\n          </Pie>\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n    </>\r\n  );\r\n}\r\n","import Chart from \"./Chart\";\r\nimport styles from \"./Summary.module.scss\";\r\nimport Dinero from \"dinero.js\";\r\n\r\nfunction Summary({ transactions, dataChart, selectedYearAndMonth }) {\r\n  if (transactions.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  let income = 0;\r\n  let expenses = 0;\r\n\r\n  for (const transaction of transactions) {\r\n    if (transaction.type === \"income\") {\r\n      income += transaction.amount;\r\n    } else {\r\n      expenses += transaction.amount;\r\n    }\r\n  }\r\n\r\n  const balance = income - expenses;\r\n  const chartData = { income, expenses, balance };\r\n\r\n  return (\r\n    <>\r\n      <Chart data={chartData} selectedYearAndMonth={selectedYearAndMonth} />\r\n      <div className={styles.wrapper}>\r\n        <div className={styles.boxIncome}>\r\n          <span>Ingresos</span>\r\n          <span>\r\n            {Dinero({ amount: income, currency: \"EUR\" })\r\n              .setLocale(\"es-ES\")\r\n              .toFormat()}\r\n          </span>\r\n        </div>\r\n        <div className={styles.boxExpense}>\r\n          <span>Gastos</span>\r\n          <span>\r\n            {Dinero({ amount: expenses, currency: \"EUR\" })\r\n              .setLocale(\"es-ES\")\r\n              .toFormat()}\r\n          </span>\r\n        </div>\r\n\r\n        <div className={styles.boxBalance}>\r\n          <span>Disponibles</span>\r\n          <span>\r\n            {Dinero({ amount: balance, currency: \"EUR\" })\r\n              .setLocale(\"es-ES\")\r\n              .toFormat()}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Summary;\r\n","export default __webpack_public_path__ + \"static/media/cash.02cc20ea.svg\";","import getBaseUrl from \"./common\";\r\n\r\nexport function getTransactions({ from, to }) {\r\n  const url = new URL(`${getBaseUrl()}/transaction`);\r\n  url.search = new URLSearchParams({ from, to }).toString();\r\n\r\n  return fetch(url).then((res) => res.json());\r\n}\r\n\r\nexport function createTransaction(amount, date, category, selectTransaction) {\r\n  \r\n  const body = {\r\n    amount: amount * 100,\r\n    date: date,\r\n    categoryId: category.id,\r\n    selectTransaction: selectTransaction,\r\n  };\r\n\r\n  return fetch(`${getBaseUrl()}/transaction`, {\r\n    method: \"POST\",\r\n    body: JSON.stringify(body),\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  });\r\n}\r\n","import moment from \"moment\";\r\nimport styles from \"./TransactionList.module.scss\";\r\nimport Dinero from \"dinero.js\";\r\n\r\nfunction TransactionList({ transactions }) {\r\n  const transactionsByDate = {};\r\n  for (const transaction of transactions) {\r\n    if (!transactionsByDate[transaction.date]) {\r\n      transactionsByDate[transaction.date] = [];\r\n    }\r\n    transactionsByDate[transaction.date].push(transaction);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      {Object.keys(transactionsByDate).map((date, idx) => (\r\n        <div key={idx} className={styles.box}>\r\n          <p className={styles.date}>{moment(date).format(\"ll\")}</p>\r\n\r\n          {transactionsByDate[date].map((transaction, idx) => {\r\n            const { category, amount, type, image } = transaction;\r\n\r\n            const price = Dinero({ amount, currency: \"EUR\" })\r\n              .setLocale(\"es-ES\")\r\n              .toFormat();\r\n\r\n            return (\r\n              <div key={idx} className={styles.rowBox}>\r\n                <i className={image} />\r\n                <span> {category}</span>\r\n                <span className={`${styles.price} ${styles[type]}`}>\r\n                  {price}\r\n                </span>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TransactionList;\r\n","import \"bootstrap/dist/css/bootstrap-grid.min.css\";\r\nimport styles from \"./Loading.module.scss\";\r\n\r\nfunction Loading() {\r\n  return (\r\n    <div className={styles.loading}>\r\n      <div className=\"spinner-border text-success\" role=\"status\" />\r\n      <div className={styles.title}> Loading....</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import moment from \"moment\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport { getExpenses } from \"../../services/charts\";\r\nimport MonthPicker from \"./components/MonthPicker\";\r\nimport Summary from \"./components/Summary\";\r\nimport { Link } from \"react-router-dom\";\r\nimport image from \"../../images/cash.svg\";\r\n\r\nimport \"moment/locale/es\";\r\n\r\nimport styles from \"./Home.module.scss\";\r\nimport { getTransactions } from \"../../services/transactions\";\r\nimport TransactionList from \"./components/TransactionList\";\r\nimport Loading from \"../../components/Loading\";\r\n\r\nfunction Home() {\r\n  const now = moment().format(\"YYYY-MM\");\r\n  const year = Number(moment().format(\"YYYY\"));\r\n  const month = Number(moment().format(\"M\"));\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [chartData, setChartData] = useState([]);\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [selectedYearAndMonth, setSelectedYearAndMonth] = useState(now);\r\n\r\n  const fetchExpenses = async (month) => {\r\n    const from = `${month}-01`;\r\n    const to = moment(month).endOf(\"month\").format(\"YYYY-MM-DD\");\r\n\r\n    const expenses = await getExpenses({ from, to });\r\n    const data = expenses.map((expense) => ({\r\n      id: expense.label,\r\n      label: expense.label,\r\n      value: expense.total,\r\n    }));\r\n    setChartData(data);\r\n  };\r\n\r\n  const fetchTransactions = async (month) => {\r\n    const from = `${month}-01`;\r\n    const to = moment(month).endOf(\"month\").format(\"YYYY-MM-DD\");\r\n\r\n    console.log(\"from:\", from);\r\n    console.log(\"to:\", to);\r\n    const transactions = await getTransactions({ from, to });\r\n    setTransactions(transactions);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n\r\n    if (selectedYearAndMonth) {\r\n      const fetchTransactionsPromise = fetchTransactions(selectedYearAndMonth);\r\n      const fetchExpensesPromise = fetchExpenses(selectedYearAndMonth);\r\n\r\n      Promise.all([fetchTransactionsPromise, fetchExpensesPromise])\r\n        .then(() => {\r\n          setLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"Error al cargar datos:\", err);\r\n          setLoading(false);\r\n        });\r\n    }\r\n  }, [selectedYearAndMonth]);\r\n\r\n  const handleMonthSelect = (selectedYearAndMonth) => {\r\n    setSelectedYearAndMonth(selectedYearAndMonth);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header className={styles.header} id=\"home\">\r\n        <img src={image} className={styles.imgHeader} alt=\"InfinityCash logo\" />\r\n        InfinityCash\r\n      </header>\r\n\r\n      <main className={styles.main}>\r\n        {loading ? (\r\n          <Loading loading={loading} />\r\n        ) : (\r\n          <>\r\n            <div className={styles.transactionSumary}>\r\n              <MonthPicker\r\n                key={selectedYearAndMonth}\r\n                initValue={{ year, month }}\r\n                maxValue={{ year, month }}\r\n                onSelect={handleMonthSelect}\r\n                monthName={moment(selectedYearAndMonth).format(\"MMMM\")}\r\n              />\r\n              {chartData.length === 0 && transactions.length === 0 ? (\r\n                <div className={styles.dataEmpty}>\r\n                  No hay transacciones en este mes, por favor cree una nueva\r\n                  transacción.\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  <Summary\r\n                    transactions={transactions}\r\n                    dataChart={chartData}\r\n                    selectedYearAndMonth={selectedYearAndMonth}\r\n                  />\r\n                  <TransactionList transactions={transactions} />\r\n                </>\r\n              )}\r\n            </div>\r\n          </>\r\n        )}\r\n      </main>\r\n\r\n      <footer className={styles.bottomMenu}>\r\n        <Link to=\"/add-transaction/income\" className={styles.newIncome}>\r\n          <i className=\"fas fa-arrow-down fa-2x\" />\r\n          <span>Ingresos</span>\r\n        </Link>\r\n        <Link to=\"/add-transaction/expense\" className={styles.newExpense}>\r\n          <i className=\"fas fa-arrow-up fa-2x\" />\r\n          <span>Gastos</span>\r\n        </Link>\r\n      </footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport styles from \"./CategoryList.module.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CategoryList({\r\n  categories,\r\n  onSelectCategory,\r\n  selectedCategory,\r\n  type,\r\n}) {\r\n  return (\r\n    <div className={styles.container}>\r\n      {categories.map((category, categories) => (\r\n        <p\r\n          className={\r\n            category.id === selectedCategory.id\r\n              ? `${styles.category} ${styles.categorySelected}`\r\n              : styles.category\r\n          }\r\n          key={categories}\r\n          onClick={() => onSelectCategory(category)}\r\n        >\r\n          <div className={styles.imgCategoryBox}>\r\n            <i className={category.image} />\r\n            <span>{category.label}</span>\r\n          </div>\r\n        </p>\r\n      ))}\r\n      <Link to={`/add-category/${type}`} className={styles.addCategory}>\r\n        <div className={styles.newCategory}>\r\n          <i className=\"fas fa-plus\" />\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CategoryList;\r\n","import { Link } from \"react-router-dom\";\r\nimport styles from \"../components/Button.module.scss\";\r\n\r\nfunction Button({\r\n  label,\r\n  type = \"button\",\r\n  to = \"\",\r\n  className = \"\",\r\n  onClick = () => {},\r\n}) {\r\n  const btn = (\r\n    <button\r\n      type={type}\r\n      className={`${styles.btn} ${className}`}\r\n      onClick={onClick}\r\n    >\r\n      {label}\r\n    </button>\r\n  );\r\n\r\n  if (to === \"\") {\r\n    return btn;\r\n  } else {\r\n    return (\r\n      <Link to={to}>\r\n        {btn}\r\n        className={className}\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","export const traductionType = {\r\n    income: \"Ingresos\",\r\n    expense: \"Gastos\",\r\n  };","import { useParams } from \"react-router\";\r\nimport moment from \"moment\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getCategories } from \"../../services/categories\";\r\nimport CategoryList from \"./components/CategoryList\";\r\nimport Button from \"../../components/Button\";\r\nimport { createTransaction } from \"../../services/transactions\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport styles from \"./AddTransaction.module.scss\";\r\nimport Loading from \"../../components/Loading\";\r\n\r\nimport \"moment/locale/es\";\r\nimport { traductionType } from \"../../locales/traduction\";\r\n\r\nfunction AddTransaction() {\r\n  const now = moment().format(\"YYYY-MM-DD\");\r\n  const history = useHistory();\r\n  const { type } = useParams();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState(now);\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n\r\n    getCategories().then((categories) => {\r\n      setCategories(categories);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  const filteredCategories = categories.filter(\r\n    (category) => category.type === type\r\n  );\r\n\r\n  const handleSubmit = (ev) => {\r\n    ev.preventDefault();\r\n\r\n    if (selectedCategory === \"\") {\r\n      alert(\"Por favor, selecione una categoria.\");\r\n      return;\r\n    }\r\n\r\n    createTransaction(amount, selectedDate, selectedCategory, type)\r\n      .then(() => {\r\n        setAmount(\"\");\r\n        setSelectedDate(now);\r\n        setSelectedCategory(\"\");\r\n        history.push(\"/home\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.headerTransaction}>\r\n        <Link to=\"/home\" className={styles.leftHome}>\r\n          <i className=\"fas fa-arrow-left \" />\r\n          <h2 className={styles.title}>\r\n            Añadir <span>{traductionType[type]}</span>\r\n          </h2>\r\n        </Link>\r\n      </div>\r\n\r\n      <form className={styles.formContainer} onSubmit={handleSubmit}>\r\n        <p className={styles.nota}>\r\n          <strong>Nota: </strong>\r\n          Selecione la categoría, la fecha y la cantidad. Si su categoría no se\r\n          encuentra disponible pulse el botón + para añadir una nueva.\r\n        </p>\r\n\r\n        {loading ? (\r\n          <Loading loading={loading} />\r\n        ) : (\r\n          <CategoryList\r\n            selectedCategory={selectedCategory}\r\n            categories={filteredCategories}\r\n            onSelectCategory={(category) => setSelectedCategory(category)}\r\n            type={type}\r\n          />\r\n        )}\r\n        <div className={styles.formContent}>\r\n          <label>\r\n            Seleccione una fecha\r\n            <input\r\n              required\r\n              className={styles.date}\r\n              type=\"date\"\r\n              max={now}\r\n              onChange={(event) => setSelectedDate(event.target.value)}\r\n              value={selectedDate}\r\n            />\r\n          </label>\r\n          <div className={styles.labelAmount}>\r\n            <label>\r\n              Ingrese una cantidad\r\n              <input\r\n                className={styles.amount}\r\n                required\r\n                type=\"number\"\r\n                min=\"0.01\"\r\n                step=\"0.01\"\r\n                placeholder=\"0.0 €\"\r\n                value={amount}\r\n                onChange={(event) => setAmount(event.target.value)}\r\n              />\r\n            </label>\r\n          </div>\r\n          <div className={styles.buttonContainer}>\r\n            <Button label=\"Enviar\" type=\"submit\" />\r\n            <Link to=\"/home\">\r\n              <Button\r\n                label=\"Cancelar\"\r\n                type=\"reset\"\r\n                className={styles.buttonCancel}\r\n              />\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\nexport default AddTransaction;\r\n","import getBaseUrl from \"./common\";\r\n\r\nexport function getCategories() {\r\n  return fetch(`${getBaseUrl()}/categories`).then((response) => {\r\n    return response.json();\r\n  });\r\n}\r\n\r\nexport function createCategory(label, type, image) {\r\n  const body = {\r\n    label,\r\n    type,\r\n    image,\r\n  };\r\n\r\n  console.log(\"body\", body);\r\n\r\n  return fetch(`${getBaseUrl()}/categories`, {\r\n    method: \"POST\",\r\n    body: JSON.stringify(body),\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  });\r\n}\r\n","export const categoryImages = [\r\n  \"fas fa-lightbulb\",\r\n  \"fas fa-faucet\",\r\n  \"fas fa-burn\",\r\n  \"fas fa-gas-pump\",\r\n  \"fas fa-car\",\r\n  \"fas fa-plane-departure\",\r\n  \"fas fa-subway\",\r\n  \"fas fa-gamepad\",\r\n  \"fas fa-laptop\",\r\n  \"fas fa-luggage-cart\",\r\n  \"fas fa-briefcase-medical\",\r\n  \"fas fa-user-md\",\r\n  \"fas fa-child\",\r\n  \"fas fa-baby\",\r\n  \"fas fa-piggy-bank\",\r\n  \"fas fa-gifts\",\r\n  \"fas fa-dog\",\r\n  \"fas fa-cat\",\r\n  \"fas fa-fish\",\r\n  \"fas fa-beer\",\r\n  \"fas fa-ice-cream\",\r\n  \"fas fa-coffee\",\r\n  \"fab fa-amazon\",\r\n  \"fab fa-ebay\",\r\n  \"fab fa-bitcoin\",\r\n  \"fas fa-credit-card\",\r\n];\r\n","import { categoryImages } from \"../../../data/category-images\";\r\nimport styles from \"./ImageList.module.scss\";\r\n\r\nfunction ImageList({ onSelectImage, selectedImage }) {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      {categoryImages.map((img, idx) => (\r\n        <div\r\n          key={idx}\r\n          className={\r\n            img === selectedImage\r\n              ? `${styles.img} ${styles.selectedImage}`\r\n              : styles.img\r\n          }\r\n          onClick={() => onSelectImage(img)}\r\n        >\r\n          <i className={img} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\nexport default ImageList;\r\n","import { useState } from \"react\";\r\nimport { createCategory } from \"../../services/categories\";\r\nimport styles from \"./AddCategory.module.scss\";\r\nimport ImageList from \"./components/ImageList\";\r\nimport Button from \"../../components/Button\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\n\r\nfunction AddCategory() {\r\n  const { type } = useParams();\r\n  const [label, setLabel] = useState(\"\");\r\n  const [selectedImage, setSelectedImage] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (ev) => {\r\n    ev.preventDefault();\r\n\r\n    if (selectedImage === \"\") {\r\n      alert(\"Please, select a image\");\r\n      return;\r\n    }\r\n\r\n    createCategory(label, type, selectedImage)\r\n      .then(() => {\r\n        setLabel(\"\");\r\n        setSelectedImage(\"\");\r\n\r\n        history.push(`/add-transaction/${type}`);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <header className={styles.header}>\r\n        <Link to=\"/home\" className={styles.categoryLink}>\r\n          <i className=\"fas fa-arrow-left\" />\r\n          <p className={styles.title}>Regresar</p>\r\n        </Link>\r\n      </header>\r\n\r\n      <form className={styles.wrapper} onSubmit={handleSubmit}>\r\n        <fieldset className={styles.fielset}>\r\n          <legend>Añadir categoria</legend>\r\n          <div className={styles.image}>\r\n            <ImageList\r\n              onSelectImage={(img) => setSelectedImage(img)}\r\n              selectedImage={selectedImage}\r\n            />\r\n          </div>\r\n\r\n          <label className={styles.label}>\r\n            Nombre de la categoria\r\n            <input\r\n              className={styles.labelInput}\r\n              required\r\n              type=\"text\"\r\n              value={label}\r\n              placeholder=\"\"\r\n              onChange={(event) => setLabel(event.target.value)}\r\n            />\r\n          </label>\r\n          <Button label=\"Añadir\" type=\"submit\" />\r\n        </fieldset>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default AddCategory;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\n\r\nimport Home from \"./pages/home/Home\";\r\n\r\nimport AddTransaction from \"./pages/add-transaction/AddTransaction\";\r\nimport AddCategory from \"./pages/add-category/AddCategory\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/home\">\r\n            <Home />\r\n          </Route>\r\n          <Route exact path=\"/add-transaction/:type\">\r\n            <AddTransaction />\r\n          </Route>\r\n          <Route path=\"/add-category/:type\">\r\n            <AddCategory />\r\n          </Route>\r\n          <Redirect to=\"/home\" />\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"TransactionList_wrapper__1_lYr\",\"box\":\"TransactionList_box__3i8st\",\"date\":\"TransactionList_date__h0uZR\",\"rowBox\":\"TransactionList_rowBox__1eETZ\",\"price\":\"TransactionList_price__2yglD\",\"income\":\"TransactionList_income__2PinZ\",\"expense\":\"TransactionList_expense__2ecD0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Summary_wrapper__2Ez_V\",\"boxIncome\":\"Summary_boxIncome__1-QWG\",\"boxBalance\":\"Summary_boxBalance__1b48k\",\"boxExpense\":\"Summary_boxExpense__1Sujn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ImageList_wrapper__uR7kT\",\"selectedImage\":\"ImageList_selectedImage__2SbTx\",\"img\":\"ImageList_img__pM5vM\"};"],"sourceRoot":""}